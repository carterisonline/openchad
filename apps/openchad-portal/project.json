{
	"name": "openchad-portal",
	"$schema": "../../node_modules/nx/schemas/project-schema.json",
	"projectType": "application",
	"sourceRoot": "apps/openchad-portal/src",
	"targets": {
		"build": {
			"executor": "qwik-nx:build",
			"options": {
				"runSequence": [
					"openchad-portal:update-schema",
					"openchad-portal:build.client",
					"openchad-portal:build.ssr"
				],
				"outputPath": "dist/apps/openchad-portal"
			},
			"configurations": {
				"preview": {}
			}
		},
		"build.client": {
			"executor": "@nrwl/vite:build",
			"options": {
				"outputPath": "dist/apps/openchad-portal",
				"configFile": "apps/openchad-portal/vite.config.ts"
			}
		},
		"build.ssr": {
			"executor": "@nrwl/vite:build",
			"defaultConfiguration": "preview",
			"options": {
				"outputPath": "dist/apps/openchad-portal"
			},
			"configurations": {
				"preview": {
					"ssr": "src/entry.preview.tsx",
					"mode": "production"
				}
			}
		},
		"preview": {
			"executor": "@nrwl/vite:preview-server",
			"options": {
				"buildTarget": "openchad-portal:build",
				"port": 4300
			}
		},
		"test": {
			"executor": "@nrwl/vite:test",
			"outputs": [
				"../../coverage/apps/openchad-portal"
			],
			"options": {
				"passWithNoTests": true,
				"reportsDirectory": "../../coverage/apps/openchad-portal"
			}
		},
		"serve": {
			"executor": "@nrwl/vite:dev-server",
			"options": {
				"buildTarget": "openchad-portal:build.client",
				"mode": "ssr",
				"port": 4200
			}
		},
		"serve.debug": {
			"executor": "nx:run-commands",
			"options": {
				"command": "node --inspect-brk ../../node_modules/vite/bin/vite.js --mode ssr --force",
				"cwd": "apps/openchad-portal"
			}
		},
		"lint": {
			"executor": "@nrwl/linter:eslint",
			"outputs": [
				"{options.outputFile}"
			],
			"options": {
				"lintFilePatterns": [
					"apps/openchad-portal/**/*.{ts,tsx,js,jsx}"
				]
			}
		},
		"update-schema": {
			"executor": "nx:run-commands",
			"options": {
				"command": "json2ts bot.schema.json apps/openchad-portal/src/types/bot-config.ts"
			}
		}
	},
	"tags": []
}